spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/ServerHak
    username: postgres
    password: postgres
  jpa:
    database-platform: org.hibernate.dialect.PostgresPlusDialect
    generate-ddl: true
    hibernate:
      ddl-auto: update
  servlet:
    multipart:
      max-file-size: 100MB
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenRefreshSecret: bccf5501a15d9c5a4dca4d4d845ddd12b4429704b5ef0feadb2bf9d8724bc14040869d3852b2e7f2f865f55350033f3ea0f77b762856558b30ead116843cc617
    tokenExpirationMsec: 864000000 #864000000 10 days
    tokenRefreshExpirationMsec: 2592000000 # 30 days
  cors:
    allowedOrigins:
      - http://localhost:3000

  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
server:
  port: 8115
  servlet:
    context-path: /api
  forward-headers-strategy: native